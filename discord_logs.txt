{"timestamp": "2025-09-16T16:13:58.187540+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:13:58.187798+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:13:58.188963+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:13:58.189404+09:00", "level": "WARNING", "name": "root", "message": "수출입은행 환율 API 응답에서 'EUR' 통화를 찾지 못했습니다.", "source": "exim.py:61", "function": "get_exchange_rate", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:13:58.189953+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:13:58.191099+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:13:58.191798+09:00", "level": "INFO", "name": "root", "message": "Foursquare API 요청: URL='https://api.foursquare.com/v3/places/search', Params='{'ll': '35.68,139.69', 'limit': 10, 'sort': 'RELEVANCE'}'", "source": "foursquare.py:29", "function": "get_places_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:13:58.192665+09:00", "level": "DEBUG", "name": "root", "message": "Foursquare API 응답 수신: {'results': [{'name': 'Tokyo Tower', 'location': {'formatted_address': 'Tokyo, Japan'}, 'categories': [{'name': 'Landmark'}]}]}", "source": "foursquare.py:36", "function": "get_places_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:13:58.193428+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:13:58.193863+09:00", "level": "INFO", "name": "root", "message": "Foursquare API 요청: URL='https://api.foursquare.com/v3/places/search', Params='{'ll': '35.68,139.69', 'limit': 10, 'sort': 'RELEVANCE'}'", "source": "foursquare.py:29", "function": "get_places_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:13:58.194054+09:00", "level": "ERROR", "name": "root", "message": "Foursquare API(35.68,139.69) 요청 중 오류: Network Error", "source": "foursquare.py:51", "function": "get_places_by_coords", "exc_info": "Traceback (most recent call last):\n  File \"/Users/gimhyeonmin/masamong/utils/api_handlers/foursquare.py\", line 33, in get_places_by_coords\n    response = await asyncio.to_thread(session.get, url, headers=headers, params=params, timeout=15)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/threads.py\", line 25, in to_thread\n    return await loop.run_in_executor(None, func_call)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/concurrent/futures/thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1167, in __call__\n    return self._mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1171, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1226, in _execute_mock_call\n    raise effect\nrequests.exceptions.RequestException: Network Error", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:13:58.196999+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:13:58.197715+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'Eiffel Tower'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:13:59.300025+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: [{'place_id': 1, 'lat': '48.8583701', 'lon': '2.2944813', 'display_name': 'Eiffel Tower, Paris, France', 'address': {'country_code': 'fr'}}]", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:13:59.304480+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:13:59.306598+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'Springfield'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:00.409285+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: [{'display_name': 'Springfield, Illinois, USA'}, {'display_name': 'Springfield, Massachusetts, USA'}]", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:00.414067+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:00.416356+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'a_made_up_place_12345'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:01.518853+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: []", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:01.522341+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:01.524670+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'Tokyo'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.627427+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: [{'place_id': 2, 'lat': '35.6895', 'lon': '139.6917', 'display_name': 'Tokyo, Japan', 'address': {'country_code': 'jp'}}]", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.628124+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache HIT for query: 'Tokyo'", "source": "nominatim.py:19", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.631617+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.633338+09:00", "level": "INFO", "name": "root", "message": "OpenWeatherMap API 요청: URL='https://api.openweathermap.org/data/2.5/weather', Params='{'lat': 35.68, 'lon': 139.69, 'appid': '[REDACTED]', 'units': 'metric', 'lang': 'kr'}'", "source": "openweathermap.py:27", "function": "get_weather_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.634305+09:00", "level": "DEBUG", "name": "root", "message": "OpenWeatherMap API 응답 수신: {'weather': [{'description': 'clear sky'}], 'main': {'temp': 25, 'feels_like': 26, 'humidity': 50}, 'wind': {'speed': 5}, 'sys': {'sunrise': 1622582400, 'sunset': 1622634000}}", "source": "openweathermap.py:34", "function": "get_weather_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.636145+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.637225+09:00", "level": "INFO", "name": "root", "message": "OpenWeatherMap API 요청: URL='https://api.openweathermap.org/data/2.5/weather', Params='{'lat': 35.68, 'lon': 139.69, 'appid': '[REDACTED]', 'units': 'metric', 'lang': 'kr'}'", "source": "openweathermap.py:27", "function": "get_weather_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.637731+09:00", "level": "ERROR", "name": "root", "message": "OpenWeatherMap API(35.68,139.69) 요청 중 오류: Network Error", "source": "openweathermap.py:53", "function": "get_weather_by_coords", "exc_info": "Traceback (most recent call last):\n  File \"/Users/gimhyeonmin/masamong/utils/api_handlers/openweathermap.py\", line 31, in get_weather_by_coords\n    response = await asyncio.to_thread(session.get, url, params=params, timeout=10)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/threads.py\", line 25, in to_thread\n    return await loop.run_in_executor(None, func_call)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/concurrent/futures/thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1167, in __call__\n    return self._mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1171, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1226, in _execute_mock_call\n    raise effect\nrequests.exceptions.RequestException: Network Error", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.641908+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.643632+09:00", "level": "INFO", "name": "root", "message": "Ticketmaster API 요청: URL='https://app.ticketmaster.com/discovery/v2/events.json', Params='{'apikey': 'DUMMY_API_KEY', 'latlong': '35.68,139.69', 'radius': 50, 'unit': 'km', 'startDateTime': '2025-09-16T07:14:02Z', 'endDateTime': '2025-10-16T07:14:02Z', 'sort': 'date,asc'}'", "source": "ticketmaster.py:33", "function": "get_events_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.644216+09:00", "level": "DEBUG", "name": "root", "message": "Ticketmaster API 응답 수신: {'_embedded': {'events': [{'name': 'Rock Festival', 'url': 'http://example.com/rock', 'dates': {'start': {'localDate': '2025-09-01'}}}]}}", "source": "ticketmaster.py:40", "function": "get_events_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.645677+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.646547+09:00", "level": "INFO", "name": "root", "message": "Ticketmaster API 요청: URL='https://app.ticketmaster.com/discovery/v2/events.json', Params='{'apikey': 'DUMMY_API_KEY', 'latlong': '35.68,139.69', 'radius': 50, 'unit': 'km', 'startDateTime': '2025-09-16T07:14:02Z', 'endDateTime': '2025-10-16T07:14:02Z', 'sort': 'date,asc'}'", "source": "ticketmaster.py:33", "function": "get_events_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.646887+09:00", "level": "ERROR", "name": "root", "message": "Ticketmaster API(35.68,139.69) 요청 중 오류: Network Error", "source": "ticketmaster.py:57", "function": "get_events_by_coords", "exc_info": "Traceback (most recent call last):\n  File \"/Users/gimhyeonmin/masamong/utils/api_handlers/ticketmaster.py\", line 37, in get_events_by_coords\n    response = await asyncio.to_thread(session.get, url, params=params, timeout=15)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/threads.py\", line 25, in to_thread\n    return await loop.run_in_executor(None, func_call)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/concurrent/futures/thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1167, in __call__\n    return self._mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1171, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1226, in _execute_mock_call\n    raise effect\nrequests.exceptions.RequestException: Network Error", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.650211+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.650643+09:00", "level": "INFO", "name": "root", "message": "ToolsCog 초기화 완료.", "source": "tools_cog.py:28", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.651971+09:00", "level": "INFO", "name": "root", "message": "Travel recommendation for 'Seoul, South Korea' (37.56, 126.97), country: kr", "source": "tools_cog.py:49", "function": "get_travel_recommendation", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.653203+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.653621+09:00", "level": "INFO", "name": "root", "message": "ToolsCog 초기화 완료.", "source": "tools_cog.py:28", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.654648+09:00", "level": "INFO", "name": "root", "message": "Travel recommendation for 'Paris, France' (48.85, 2.29), country: fr", "source": "tools_cog.py:49", "function": "get_travel_recommendation", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.655745+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:14:02.658136+09:00", "level": "INFO", "name": "root", "message": "에이전트 처리 시작 (2-step). Query: 'Tell me about Testville'", "source": "ai_handler.py:223", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "286aeb3b"}
{"timestamp": "2025-09-16T16:14:02.658463+09:00", "level": "INFO", "name": "root", "message": "1단계: Lite 모델 호출 시작...", "source": "ai_handler.py:238", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "286aeb3b"}
{"timestamp": "2025-09-16T16:14:02.658810+09:00", "level": "INFO", "name": "root", "message": "Lite 모델 응답: '<tool_call>{\"tool_to_use\": \"get_travel_recommendation\", \"parameters\": {\"location_name\": \"Testville\"}...'", "source": "ai_handler.py:247", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "286aeb3b"}
{"timestamp": "2025-09-16T16:14:02.659004+09:00", "level": "INFO", "name": "root", "message": "분기: 도구 사용으로 판단. Tool: {'tool_to_use': 'get_travel_recommendation', 'parameters': {'location_name': 'Testville'}}", "source": "ai_handler.py:258", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "286aeb3b"}
{"timestamp": "2025-09-16T16:14:02.659100+09:00", "level": "INFO", "name": "root", "message": "2단계: Main 모델 호출 시작...", "source": "ai_handler.py:269", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "286aeb3b"}
{"timestamp": "2025-09-16T16:14:02.659163+09:00", "level": "INFO", "name": "root", "message": "여행 추천 도구 결과에 특수 프롬프트를 사용합니다.", "source": "ai_handler.py:279", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "286aeb3b"}
{"timestamp": "2025-09-16T16:14:02.659301+09:00", "level": "INFO", "name": "root", "message": "Main 모델이 최종 답변을 생성했습니다.", "source": "ai_handler.py:296", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "286aeb3b"}
{"timestamp": "2025-09-16T16:15:10.694970+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:10.695400+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:10.723014+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:10.724986+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:10.726857+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:10.727539+09:00", "level": "INFO", "name": "root", "message": "Foursquare API 요청: URL='https://api.foursquare.com/v3/places/search', Params='{'ll': '35.68,139.69', 'limit': 10, 'sort': 'RELEVANCE'}'", "source": "foursquare.py:29", "function": "get_places_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:10.728482+09:00", "level": "DEBUG", "name": "root", "message": "Foursquare API 응답 수신: {'results': [{'name': 'Tokyo Tower', 'location': {'formatted_address': 'Tokyo, Japan'}, 'categories': [{'name': 'Landmark'}]}]}", "source": "foursquare.py:36", "function": "get_places_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:10.729234+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:10.729889+09:00", "level": "INFO", "name": "root", "message": "Foursquare API 요청: URL='https://api.foursquare.com/v3/places/search', Params='{'ll': '35.68,139.69', 'limit': 10, 'sort': 'RELEVANCE'}'", "source": "foursquare.py:29", "function": "get_places_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:10.730088+09:00", "level": "ERROR", "name": "root", "message": "Foursquare API(35.68,139.69) 요청 중 오류: Network Error", "source": "foursquare.py:51", "function": "get_places_by_coords", "exc_info": "Traceback (most recent call last):\n  File \"/Users/gimhyeonmin/masamong/utils/api_handlers/foursquare.py\", line 33, in get_places_by_coords\n    response = await asyncio.to_thread(session.get, url, headers=headers, params=params, timeout=15)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/threads.py\", line 25, in to_thread\n    return await loop.run_in_executor(None, func_call)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/concurrent/futures/thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1167, in __call__\n    return self._mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1171, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1226, in _execute_mock_call\n    raise effect\nrequests.exceptions.RequestException: Network Error", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:10.733331+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:10.733808+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'Eiffel Tower'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:11.835915+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: [{'place_id': 1, 'lat': '48.8583701', 'lon': '2.2944813', 'display_name': 'Eiffel Tower, Paris, France', 'address': {'country_code': 'fr'}}]", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:11.839872+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:11.841854+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'Springfield'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:12.944447+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: [{'display_name': 'Springfield, Illinois, USA'}, {'display_name': 'Springfield, Massachusetts, USA'}]", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:12.949113+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:12.952130+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'a_made_up_place_12345'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:14.054860+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: []", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:14.058092+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:14.060107+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'Tokyo'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:15.162717+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: [{'place_id': 2, 'lat': '35.6895', 'lon': '139.6917', 'display_name': 'Tokyo, Japan', 'address': {'country_code': 'jp'}}]", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:15.163144+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache HIT for query: 'Tokyo'", "source": "nominatim.py:19", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:15.165853+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:15.167391+09:00", "level": "INFO", "name": "root", "message": "OpenWeatherMap API 요청: URL='https://api.openweathermap.org/data/2.5/weather', Params='{'lat': 35.68, 'lon': 139.69, 'appid': '[REDACTED]', 'units': 'metric', 'lang': 'kr'}'", "source": "openweathermap.py:27", "function": "get_weather_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:15.168377+09:00", "level": "DEBUG", "name": "root", "message": "OpenWeatherMap API 응답 수신: {'weather': [{'description': 'clear sky'}], 'main': {'temp': 25, 'feels_like': 26, 'humidity': 50}, 'wind': {'speed': 5}, 'sys': {'sunrise': 1622582400, 'sunset': 1622634000}}", "source": "openweathermap.py:34", "function": "get_weather_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:15.170048+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:15.171166+09:00", "level": "INFO", "name": "root", "message": "OpenWeatherMap API 요청: URL='https://api.openweathermap.org/data/2.5/weather', Params='{'lat': 35.68, 'lon': 139.69, 'appid': '[REDACTED]', 'units': 'metric', 'lang': 'kr'}'", "source": "openweathermap.py:27", "function": "get_weather_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:15.171710+09:00", "level": "ERROR", "name": "root", "message": "OpenWeatherMap API(35.68,139.69) 요청 중 오류: Network Error", "source": "openweathermap.py:53", "function": "get_weather_by_coords", "exc_info": "Traceback (most recent call last):\n  File \"/Users/gimhyeonmin/masamong/utils/api_handlers/openweathermap.py\", line 31, in get_weather_by_coords\n    response = await asyncio.to_thread(session.get, url, params=params, timeout=10)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/threads.py\", line 25, in to_thread\n    return await loop.run_in_executor(None, func_call)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/concurrent/futures/thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1167, in __call__\n    return self._mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1171, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1226, in _execute_mock_call\n    raise effect\nrequests.exceptions.RequestException: Network Error", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:15.176183+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:15.184643+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:15.189098+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:15.189486+09:00", "level": "INFO", "name": "root", "message": "ToolsCog 초기화 완료.", "source": "tools_cog.py:28", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:15.190435+09:00", "level": "INFO", "name": "root", "message": "Travel recommendation for 'Seoul, South Korea' (37.56, 126.97), country: kr", "source": "tools_cog.py:49", "function": "get_travel_recommendation", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:15.191937+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:15.192281+09:00", "level": "INFO", "name": "root", "message": "ToolsCog 초기화 완료.", "source": "tools_cog.py:28", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:15.192998+09:00", "level": "INFO", "name": "root", "message": "Travel recommendation for 'Paris, France' (48.85, 2.29), country: fr", "source": "tools_cog.py:49", "function": "get_travel_recommendation", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:15.193841+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:15:15.195959+09:00", "level": "INFO", "name": "root", "message": "에이전트 처리 시작 (2-step). Query: 'Tell me about Testville'", "source": "ai_handler.py:223", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "23c2d595"}
{"timestamp": "2025-09-16T16:15:15.196249+09:00", "level": "INFO", "name": "root", "message": "1단계: Lite 모델 호출 시작...", "source": "ai_handler.py:238", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "23c2d595"}
{"timestamp": "2025-09-16T16:15:15.196400+09:00", "level": "INFO", "name": "root", "message": "Lite 모델 응답: '<tool_call>{\"tool_to_use\": \"get_travel_recommendation\", \"parameters\": {\"location_name\": \"Testville\"}...'", "source": "ai_handler.py:247", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "23c2d595"}
{"timestamp": "2025-09-16T16:15:15.196579+09:00", "level": "INFO", "name": "root", "message": "분기: 도구 사용으로 판단. Tool: {'tool_to_use': 'get_travel_recommendation', 'parameters': {'location_name': 'Testville'}}", "source": "ai_handler.py:258", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "23c2d595"}
{"timestamp": "2025-09-16T16:15:15.196659+09:00", "level": "INFO", "name": "root", "message": "2단계: Main 모델 호출 시작...", "source": "ai_handler.py:269", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "23c2d595"}
{"timestamp": "2025-09-16T16:15:15.196713+09:00", "level": "INFO", "name": "root", "message": "여행 추천 도구 결과에 특수 프롬프트를 사용합니다.", "source": "ai_handler.py:279", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "23c2d595"}
{"timestamp": "2025-09-16T16:15:15.196851+09:00", "level": "INFO", "name": "root", "message": "Main 모델이 최종 답변을 생성했습니다.", "source": "ai_handler.py:296", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "23c2d595"}
{"timestamp": "2025-09-16T16:16:08.867433+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:08.867815+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:08.894111+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:08.894609+09:00", "level": "WARNING", "name": "root", "message": "수출입은행 환율 API 응답에서 'EUR' 통화를 찾지 못했습니다.", "source": "exim.py:59", "function": "get_krw_exchange_rate", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:08.895189+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:08.896956+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:08.897655+09:00", "level": "INFO", "name": "root", "message": "Foursquare API 요청: URL='https://api.foursquare.com/v3/places/search', Params='{'ll': '35.68,139.69', 'limit': 10, 'sort': 'RELEVANCE'}'", "source": "foursquare.py:29", "function": "get_places_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:08.898650+09:00", "level": "DEBUG", "name": "root", "message": "Foursquare API 응답 수신: {'results': [{'name': 'Tokyo Tower', 'location': {'formatted_address': 'Tokyo, Japan'}, 'categories': [{'name': 'Landmark'}]}]}", "source": "foursquare.py:36", "function": "get_places_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:08.899444+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:08.899813+09:00", "level": "INFO", "name": "root", "message": "Foursquare API 요청: URL='https://api.foursquare.com/v3/places/search', Params='{'ll': '35.68,139.69', 'limit': 10, 'sort': 'RELEVANCE'}'", "source": "foursquare.py:29", "function": "get_places_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:08.900208+09:00", "level": "ERROR", "name": "root", "message": "Foursquare API(35.68,139.69) 요청 중 오류: Network Error", "source": "foursquare.py:51", "function": "get_places_by_coords", "exc_info": "Traceback (most recent call last):\n  File \"/Users/gimhyeonmin/masamong/utils/api_handlers/foursquare.py\", line 33, in get_places_by_coords\n    response = await asyncio.to_thread(session.get, url, headers=headers, params=params, timeout=15)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/threads.py\", line 25, in to_thread\n    return await loop.run_in_executor(None, func_call)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/concurrent/futures/thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1167, in __call__\n    return self._mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1171, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1226, in _execute_mock_call\n    raise effect\nrequests.exceptions.RequestException: Network Error", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:08.903310+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:08.903774+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'Eiffel Tower'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:10.006017+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: [{'place_id': 1, 'lat': '48.8583701', 'lon': '2.2944813', 'display_name': 'Eiffel Tower, Paris, France', 'address': {'country_code': 'fr'}}]", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:10.009818+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:10.011674+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'Springfield'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:11.114316+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: [{'display_name': 'Springfield, Illinois, USA'}, {'display_name': 'Springfield, Massachusetts, USA'}]", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:11.117795+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:11.120821+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'a_made_up_place_12345'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:12.223323+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: []", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:12.226541+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:12.228726+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'Tokyo'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.331456+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: [{'place_id': 2, 'lat': '35.6895', 'lon': '139.6917', 'display_name': 'Tokyo, Japan', 'address': {'country_code': 'jp'}}]", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.332073+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache HIT for query: 'Tokyo'", "source": "nominatim.py:19", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.336028+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.338327+09:00", "level": "INFO", "name": "root", "message": "OpenWeatherMap API 요청: URL='https://api.openweathermap.org/data/2.5/weather', Params='{'lat': 35.68, 'lon': 139.69, 'appid': '[REDACTED]', 'units': 'metric', 'lang': 'kr'}'", "source": "openweathermap.py:27", "function": "get_weather_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.339757+09:00", "level": "DEBUG", "name": "root", "message": "OpenWeatherMap API 응답 수신: {'weather': [{'description': 'clear sky'}], 'main': {'temp': 25, 'feels_like': 26, 'humidity': 50}, 'wind': {'speed': 5}, 'sys': {'sunrise': 1622582400, 'sunset': 1622634000}}", "source": "openweathermap.py:34", "function": "get_weather_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.342262+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.344197+09:00", "level": "INFO", "name": "root", "message": "OpenWeatherMap API 요청: URL='https://api.openweathermap.org/data/2.5/weather', Params='{'lat': 35.68, 'lon': 139.69, 'appid': '[REDACTED]', 'units': 'metric', 'lang': 'kr'}'", "source": "openweathermap.py:27", "function": "get_weather_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.344814+09:00", "level": "ERROR", "name": "root", "message": "OpenWeatherMap API(35.68,139.69) 요청 중 오류: Network Error", "source": "openweathermap.py:53", "function": "get_weather_by_coords", "exc_info": "Traceback (most recent call last):\n  File \"/Users/gimhyeonmin/masamong/utils/api_handlers/openweathermap.py\", line 31, in get_weather_by_coords\n    response = await asyncio.to_thread(session.get, url, params=params, timeout=10)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/threads.py\", line 25, in to_thread\n    return await loop.run_in_executor(None, func_call)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/concurrent/futures/thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1167, in __call__\n    return self._mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1171, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1226, in _execute_mock_call\n    raise effect\nrequests.exceptions.RequestException: Network Error", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.349829+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.350958+09:00", "level": "INFO", "name": "root", "message": "Ticketmaster API 요청: URL='https://app.ticketmaster.com/discovery/v2/events.json', Params='{'apikey': 'DUMMY_API_KEY', 'latlong': '35.68,139.69', 'radius': 50, 'unit': 'km', 'startDateTime': '2025-09-16T07:16:13Z', 'endDateTime': '2025-10-16T07:16:13Z', 'sort': 'date,asc'}'", "source": "ticketmaster.py:33", "function": "get_events_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.351477+09:00", "level": "DEBUG", "name": "root", "message": "Ticketmaster API 응답 수신: {'_embedded': {'events': [{'name': 'Rock Festival', 'url': 'http://example.com/rock', 'dates': {'start': {'localDate': '2025-09-01'}}}]}}", "source": "ticketmaster.py:40", "function": "get_events_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.352657+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.353475+09:00", "level": "INFO", "name": "root", "message": "Ticketmaster API 요청: URL='https://app.ticketmaster.com/discovery/v2/events.json', Params='{'apikey': 'DUMMY_API_KEY', 'latlong': '35.68,139.69', 'radius': 50, 'unit': 'km', 'startDateTime': '2025-09-16T07:16:13Z', 'endDateTime': '2025-10-16T07:16:13Z', 'sort': 'date,asc'}'", "source": "ticketmaster.py:33", "function": "get_events_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.353824+09:00", "level": "ERROR", "name": "root", "message": "Ticketmaster API(35.68,139.69) 요청 중 오류: Network Error", "source": "ticketmaster.py:57", "function": "get_events_by_coords", "exc_info": "Traceback (most recent call last):\n  File \"/Users/gimhyeonmin/masamong/utils/api_handlers/ticketmaster.py\", line 37, in get_events_by_coords\n    response = await asyncio.to_thread(session.get, url, params=params, timeout=15)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/threads.py\", line 25, in to_thread\n    return await loop.run_in_executor(None, func_call)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/concurrent/futures/thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1167, in __call__\n    return self._mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1171, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1226, in _execute_mock_call\n    raise effect\nrequests.exceptions.RequestException: Network Error", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.357333+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.357799+09:00", "level": "INFO", "name": "root", "message": "ToolsCog 초기화 완료.", "source": "tools_cog.py:28", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.361679+09:00", "level": "INFO", "name": "root", "message": "Travel recommendation for 'Seoul, South Korea' (37.56, 126.97), country: kr", "source": "tools_cog.py:49", "function": "get_travel_recommendation", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.363077+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.363479+09:00", "level": "INFO", "name": "root", "message": "ToolsCog 초기화 완료.", "source": "tools_cog.py:28", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.364186+09:00", "level": "INFO", "name": "root", "message": "Travel recommendation for 'Paris, France' (48.85, 2.29), country: fr", "source": "tools_cog.py:49", "function": "get_travel_recommendation", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.365401+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:13.367461+09:00", "level": "INFO", "name": "root", "message": "에이전트 처리 시작 (2-step). Query: 'Tell me about Testville'", "source": "ai_handler.py:223", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "2de7372c"}
{"timestamp": "2025-09-16T16:16:13.367716+09:00", "level": "INFO", "name": "root", "message": "1단계: Lite 모델 호출 시작...", "source": "ai_handler.py:238", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "2de7372c"}
{"timestamp": "2025-09-16T16:16:13.367865+09:00", "level": "INFO", "name": "root", "message": "Lite 모델 응답: '<tool_call>{\"tool_to_use\": \"get_travel_recommendation\", \"parameters\": {\"location_name\": \"Testville\"}...'", "source": "ai_handler.py:247", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "2de7372c"}
{"timestamp": "2025-09-16T16:16:13.368043+09:00", "level": "INFO", "name": "root", "message": "분기: 도구 사용으로 판단. Tool: {'tool_to_use': 'get_travel_recommendation', 'parameters': {'location_name': 'Testville'}}", "source": "ai_handler.py:258", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "2de7372c"}
{"timestamp": "2025-09-16T16:16:13.368127+09:00", "level": "INFO", "name": "root", "message": "2단계: Main 모델 호출 시작...", "source": "ai_handler.py:269", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "2de7372c"}
{"timestamp": "2025-09-16T16:16:13.368184+09:00", "level": "INFO", "name": "root", "message": "여행 추천 도구 결과에 특수 프롬프트를 사용합니다.", "source": "ai_handler.py:279", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "2de7372c"}
{"timestamp": "2025-09-16T16:16:13.368324+09:00", "level": "INFO", "name": "root", "message": "Main 모델이 최종 답변을 생성했습니다.", "source": "ai_handler.py:296", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "2de7372c"}
{"timestamp": "2025-09-16T16:16:25.221023+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:25.221280+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:25.222407+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:25.222833+09:00", "level": "WARNING", "name": "root", "message": "수출입은행 환율 API 응답에서 'EUR' 통화를 찾지 못했습니다.", "source": "exim.py:59", "function": "get_krw_exchange_rate", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:25.223352+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:25.224423+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:25.225053+09:00", "level": "INFO", "name": "root", "message": "Foursquare API 요청: URL='https://api.foursquare.com/v3/places/search', Params='{'ll': '35.68,139.69', 'limit': 10, 'sort': 'RELEVANCE'}'", "source": "foursquare.py:29", "function": "get_places_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:25.225708+09:00", "level": "DEBUG", "name": "root", "message": "Foursquare API 응답 수신: {'results': [{'name': 'Tokyo Tower', 'location': {'formatted_address': 'Tokyo, Japan'}, 'categories': [{'name': 'Landmark'}]}]}", "source": "foursquare.py:36", "function": "get_places_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:25.226520+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:25.226934+09:00", "level": "INFO", "name": "root", "message": "Foursquare API 요청: URL='https://api.foursquare.com/v3/places/search', Params='{'ll': '35.68,139.69', 'limit': 10, 'sort': 'RELEVANCE'}'", "source": "foursquare.py:29", "function": "get_places_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:25.227175+09:00", "level": "ERROR", "name": "root", "message": "Foursquare API(35.68,139.69) 요청 중 오류: Network Error", "source": "foursquare.py:51", "function": "get_places_by_coords", "exc_info": "Traceback (most recent call last):\n  File \"/Users/gimhyeonmin/masamong/utils/api_handlers/foursquare.py\", line 33, in get_places_by_coords\n    response = await asyncio.to_thread(session.get, url, headers=headers, params=params, timeout=15)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/threads.py\", line 25, in to_thread\n    return await loop.run_in_executor(None, func_call)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/concurrent/futures/thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1167, in __call__\n    return self._mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1171, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1226, in _execute_mock_call\n    raise effect\nrequests.exceptions.RequestException: Network Error", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:25.229699+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:25.230432+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'Eiffel Tower'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:26.332413+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: [{'place_id': 1, 'lat': '48.8583701', 'lon': '2.2944813', 'display_name': 'Eiffel Tower, Paris, France', 'address': {'country_code': 'fr'}}]", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:26.335664+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:26.337923+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'Springfield'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:27.440857+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: [{'display_name': 'Springfield, Illinois, USA'}, {'display_name': 'Springfield, Massachusetts, USA'}]", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:27.446272+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:27.448661+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'a_made_up_place_12345'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:28.551421+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: []", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:28.555116+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:28.558104+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'Tokyo'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.660845+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: [{'place_id': 2, 'lat': '35.6895', 'lon': '139.6917', 'display_name': 'Tokyo, Japan', 'address': {'country_code': 'jp'}}]", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.661497+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache HIT for query: 'Tokyo'", "source": "nominatim.py:19", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.666874+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.668962+09:00", "level": "INFO", "name": "root", "message": "OpenWeatherMap API 요청: URL='https://api.openweathermap.org/data/2.5/weather', Params='{'lat': 35.68, 'lon': 139.69, 'appid': '[REDACTED]', 'units': 'metric', 'lang': 'kr'}'", "source": "openweathermap.py:27", "function": "get_weather_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.670724+09:00", "level": "DEBUG", "name": "root", "message": "OpenWeatherMap API 응답 수신: {'weather': [{'description': 'clear sky'}], 'main': {'temp': 25, 'feels_like': 26, 'humidity': 50}, 'wind': {'speed': 5}, 'sys': {'sunrise': 1622582400, 'sunset': 1622634000}}", "source": "openweathermap.py:34", "function": "get_weather_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.673446+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.674825+09:00", "level": "INFO", "name": "root", "message": "OpenWeatherMap API 요청: URL='https://api.openweathermap.org/data/2.5/weather', Params='{'lat': 35.68, 'lon': 139.69, 'appid': '[REDACTED]', 'units': 'metric', 'lang': 'kr'}'", "source": "openweathermap.py:27", "function": "get_weather_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.675554+09:00", "level": "ERROR", "name": "root", "message": "OpenWeatherMap API(35.68,139.69) 요청 중 오류: Network Error", "source": "openweathermap.py:53", "function": "get_weather_by_coords", "exc_info": "Traceback (most recent call last):\n  File \"/Users/gimhyeonmin/masamong/utils/api_handlers/openweathermap.py\", line 31, in get_weather_by_coords\n    response = await asyncio.to_thread(session.get, url, params=params, timeout=10)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/threads.py\", line 25, in to_thread\n    return await loop.run_in_executor(None, func_call)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/concurrent/futures/thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1167, in __call__\n    return self._mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1171, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1226, in _execute_mock_call\n    raise effect\nrequests.exceptions.RequestException: Network Error", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.680166+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.682000+09:00", "level": "INFO", "name": "root", "message": "Ticketmaster API 요청: URL='https://app.ticketmaster.com/discovery/v2/events.json', Params='{'apikey': 'DUMMY_API_KEY', 'latlong': '35.68,139.69', 'radius': 50, 'unit': 'km', 'startDateTime': '2025-09-16T07:16:29Z', 'endDateTime': '2025-10-16T07:16:29Z', 'sort': 'date,asc'}'", "source": "ticketmaster.py:33", "function": "get_events_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.682656+09:00", "level": "DEBUG", "name": "root", "message": "Ticketmaster API 응답 수신: {'_embedded': {'events': [{'name': 'Rock Festival', 'url': 'http://example.com/rock', 'dates': {'start': {'localDate': '2025-09-01'}}}]}}", "source": "ticketmaster.py:40", "function": "get_events_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.684033+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.684769+09:00", "level": "INFO", "name": "root", "message": "Ticketmaster API 요청: URL='https://app.ticketmaster.com/discovery/v2/events.json', Params='{'apikey': 'DUMMY_API_KEY', 'latlong': '35.68,139.69', 'radius': 50, 'unit': 'km', 'startDateTime': '2025-09-16T07:16:29Z', 'endDateTime': '2025-10-16T07:16:29Z', 'sort': 'date,asc'}'", "source": "ticketmaster.py:33", "function": "get_events_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.685093+09:00", "level": "ERROR", "name": "root", "message": "Ticketmaster API(35.68,139.69) 요청 중 오류: Network Error", "source": "ticketmaster.py:57", "function": "get_events_by_coords", "exc_info": "Traceback (most recent call last):\n  File \"/Users/gimhyeonmin/masamong/utils/api_handlers/ticketmaster.py\", line 37, in get_events_by_coords\n    response = await asyncio.to_thread(session.get, url, params=params, timeout=15)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/threads.py\", line 25, in to_thread\n    return await loop.run_in_executor(None, func_call)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/concurrent/futures/thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1167, in __call__\n    return self._mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1171, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1226, in _execute_mock_call\n    raise effect\nrequests.exceptions.RequestException: Network Error", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.688551+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.689073+09:00", "level": "INFO", "name": "root", "message": "ToolsCog 초기화 완료.", "source": "tools_cog.py:28", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.692752+09:00", "level": "INFO", "name": "root", "message": "Travel recommendation for 'Seoul, South Korea' (37.56, 126.97), country: kr", "source": "tools_cog.py:49", "function": "get_travel_recommendation", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.694510+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.694977+09:00", "level": "INFO", "name": "root", "message": "ToolsCog 초기화 완료.", "source": "tools_cog.py:28", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.695810+09:00", "level": "INFO", "name": "root", "message": "Travel recommendation for 'Paris, France' (48.85, 2.29), country: fr", "source": "tools_cog.py:49", "function": "get_travel_recommendation", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.696901+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:16:29.699479+09:00", "level": "INFO", "name": "root", "message": "에이전트 처리 시작 (2-step). Query: 'Tell me about Testville'", "source": "ai_handler.py:223", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "27950940"}
{"timestamp": "2025-09-16T16:16:29.699762+09:00", "level": "INFO", "name": "root", "message": "1단계: Lite 모델 호출 시작...", "source": "ai_handler.py:238", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "27950940"}
{"timestamp": "2025-09-16T16:16:29.699922+09:00", "level": "INFO", "name": "root", "message": "Lite 모델 응답: '<tool_call>{\"tool_to_use\": \"get_travel_recommendation\", \"parameters\": {\"location_name\": \"Testville\"}...'", "source": "ai_handler.py:247", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "27950940"}
{"timestamp": "2025-09-16T16:16:29.700275+09:00", "level": "INFO", "name": "root", "message": "분기: 도구 사용으로 판단. Tool: {'tool_to_use': 'get_travel_recommendation', 'parameters': {'location_name': 'Testville'}}", "source": "ai_handler.py:258", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "27950940"}
{"timestamp": "2025-09-16T16:16:29.700366+09:00", "level": "INFO", "name": "root", "message": "2단계: Main 모델 호출 시작...", "source": "ai_handler.py:269", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "27950940"}
{"timestamp": "2025-09-16T16:16:29.700423+09:00", "level": "INFO", "name": "root", "message": "여행 추천 도구 결과에 특수 프롬프트를 사용합니다.", "source": "ai_handler.py:279", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "27950940"}
{"timestamp": "2025-09-16T16:16:29.700556+09:00", "level": "INFO", "name": "root", "message": "Main 모델이 최종 답변을 생성했습니다.", "source": "ai_handler.py:296", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "27950940"}
{"timestamp": "2025-09-16T16:25:54.902832+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:54.903196+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:54.904188+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:54.904569+09:00", "level": "WARNING", "name": "root", "message": "수출입은행 환율 API 응답에서 'EUR' 통화를 찾지 못했습니다.", "source": "exim.py:59", "function": "get_krw_exchange_rate", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:54.905186+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:54.906372+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:54.907013+09:00", "level": "INFO", "name": "root", "message": "Foursquare API 요청: URL='https://api.foursquare.com/v3/places/search', Params='{'ll': '35.68,139.69', 'limit': 10, 'sort': 'RELEVANCE'}'", "source": "foursquare.py:29", "function": "get_places_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:54.907818+09:00", "level": "DEBUG", "name": "root", "message": "Foursquare API 응답 수신: {'results': [{'name': 'Tokyo Tower', 'location': {'formatted_address': 'Tokyo, Japan'}, 'categories': [{'name': 'Landmark'}]}]}", "source": "foursquare.py:36", "function": "get_places_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:54.908740+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:54.909205+09:00", "level": "INFO", "name": "root", "message": "Foursquare API 요청: URL='https://api.foursquare.com/v3/places/search', Params='{'ll': '35.68,139.69', 'limit': 10, 'sort': 'RELEVANCE'}'", "source": "foursquare.py:29", "function": "get_places_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:54.909408+09:00", "level": "ERROR", "name": "root", "message": "Foursquare API(35.68,139.69) 요청 중 오류: Network Error", "source": "foursquare.py:51", "function": "get_places_by_coords", "exc_info": "Traceback (most recent call last):\n  File \"/Users/gimhyeonmin/masamong/utils/api_handlers/foursquare.py\", line 33, in get_places_by_coords\n    response = await asyncio.to_thread(session.get, url, headers=headers, params=params, timeout=15)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/threads.py\", line 25, in to_thread\n    return await loop.run_in_executor(None, func_call)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/concurrent/futures/thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1167, in __call__\n    return self._mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1171, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1226, in _execute_mock_call\n    raise effect\nrequests.exceptions.RequestException: Network Error", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:54.913203+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:54.913959+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'Eiffel Tower'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:56.015914+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: [{'place_id': 1, 'lat': '48.8583701', 'lon': '2.2944813', 'display_name': 'Eiffel Tower, Paris, France', 'address': {'country_code': 'fr'}}]", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:56.018606+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:56.020052+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'Springfield'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:57.122987+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: [{'display_name': 'Springfield, Illinois, USA'}, {'display_name': 'Springfield, Massachusetts, USA'}]", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:57.125696+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:57.126901+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'a_made_up_place_12345'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:58.230370+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: []", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:58.235177+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:58.237830+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache MISS for query: 'Tokyo'", "source": "nominatim.py:22", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.339992+09:00", "level": "DEBUG", "name": "root", "message": "Nominatim API 응답 수신: [{'place_id': 2, 'lat': '35.6895', 'lon': '139.6917', 'display_name': 'Tokyo, Japan', 'address': {'country_code': 'jp'}}]", "source": "nominatim.py:42", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.340166+09:00", "level": "INFO", "name": "root", "message": "Geocoding cache HIT for query: 'Tokyo'", "source": "nominatim.py:19", "function": "geocode_location", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.341385+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.342341+09:00", "level": "INFO", "name": "root", "message": "OpenWeatherMap API 요청: URL='https://api.openweathermap.org/data/2.5/weather', Params='{'lat': 35.68, 'lon': 139.69, 'appid': '[REDACTED]', 'units': 'metric', 'lang': 'kr'}'", "source": "openweathermap.py:27", "function": "get_weather_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.342772+09:00", "level": "DEBUG", "name": "root", "message": "OpenWeatherMap API 응답 수신: {'weather': [{'description': 'clear sky'}], 'main': {'temp': 25, 'feels_like': 26, 'humidity': 50}, 'wind': {'speed': 5}, 'sys': {'sunrise': 1622582400, 'sunset': 1622634000}}", "source": "openweathermap.py:34", "function": "get_weather_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.343811+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.344378+09:00", "level": "INFO", "name": "root", "message": "OpenWeatherMap API 요청: URL='https://api.openweathermap.org/data/2.5/weather', Params='{'lat': 35.68, 'lon': 139.69, 'appid': '[REDACTED]', 'units': 'metric', 'lang': 'kr'}'", "source": "openweathermap.py:27", "function": "get_weather_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.344605+09:00", "level": "ERROR", "name": "root", "message": "OpenWeatherMap API(35.68,139.69) 요청 중 오류: Network Error", "source": "openweathermap.py:53", "function": "get_weather_by_coords", "exc_info": "Traceback (most recent call last):\n  File \"/Users/gimhyeonmin/masamong/utils/api_handlers/openweathermap.py\", line 31, in get_weather_by_coords\n    response = await asyncio.to_thread(session.get, url, params=params, timeout=10)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/threads.py\", line 25, in to_thread\n    return await loop.run_in_executor(None, func_call)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/concurrent/futures/thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1167, in __call__\n    return self._mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1171, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1226, in _execute_mock_call\n    raise effect\nrequests.exceptions.RequestException: Network Error", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.346795+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.347673+09:00", "level": "INFO", "name": "root", "message": "Ticketmaster API 요청: URL='https://app.ticketmaster.com/discovery/v2/events.json', Params='{'apikey': 'DUMMY_API_KEY', 'latlong': '35.68,139.69', 'radius': 50, 'unit': 'km', 'startDateTime': '2025-09-16T07:25:59Z', 'endDateTime': '2025-10-16T07:25:59Z', 'sort': 'date,asc'}'", "source": "ticketmaster.py:33", "function": "get_events_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.348030+09:00", "level": "DEBUG", "name": "root", "message": "Ticketmaster API 응답 수신: {'_embedded': {'events': [{'name': 'Rock Festival', 'url': 'http://example.com/rock', 'dates': {'start': {'localDate': '2025-09-01'}}}]}}", "source": "ticketmaster.py:40", "function": "get_events_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.348773+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.349287+09:00", "level": "INFO", "name": "root", "message": "Ticketmaster API 요청: URL='https://app.ticketmaster.com/discovery/v2/events.json', Params='{'apikey': 'DUMMY_API_KEY', 'latlong': '35.68,139.69', 'radius': 50, 'unit': 'km', 'startDateTime': '2025-09-16T07:25:59Z', 'endDateTime': '2025-10-16T07:25:59Z', 'sort': 'date,asc'}'", "source": "ticketmaster.py:33", "function": "get_events_by_coords", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.349478+09:00", "level": "ERROR", "name": "root", "message": "Ticketmaster API(35.68,139.69) 요청 중 오류: Network Error", "source": "ticketmaster.py:57", "function": "get_events_by_coords", "exc_info": "Traceback (most recent call last):\n  File \"/Users/gimhyeonmin/masamong/utils/api_handlers/ticketmaster.py\", line 37, in get_events_by_coords\n    response = await asyncio.to_thread(session.get, url, params=params, timeout=15)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/asyncio/threads.py\", line 25, in to_thread\n    return await loop.run_in_executor(None, func_call)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/concurrent/futures/thread.py\", line 59, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1167, in __call__\n    return self._mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1171, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.13/lib/python3.13/unittest/mock.py\", line 1226, in _execute_mock_call\n    raise effect\nrequests.exceptions.RequestException: Network Error", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.351506+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.351766+09:00", "level": "INFO", "name": "root", "message": "ToolsCog 초기화 완료.", "source": "tools_cog.py:28", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.354140+09:00", "level": "INFO", "name": "root", "message": "Travel recommendation for 'Seoul, South Korea' (37.56, 126.97), country: kr", "source": "tools_cog.py:49", "function": "get_travel_recommendation", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.355034+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.355300+09:00", "level": "INFO", "name": "root", "message": "ToolsCog 초기화 완료.", "source": "tools_cog.py:28", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.355830+09:00", "level": "INFO", "name": "root", "message": "Travel recommendation for 'Paris, France' (48.85, 2.29), country: fr", "source": "tools_cog.py:49", "function": "get_travel_recommendation", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.356491+09:00", "level": "DEBUG", "name": "asyncio", "message": "Using selector: KqueueSelector", "source": "selector_events.py:64", "function": "__init__", "trace_id": "N/A"}
{"timestamp": "2025-09-16T16:25:59.357992+09:00", "level": "INFO", "name": "root", "message": "에이전트 처리 시작 (2-step). Query: 'Tell me about Testville'", "source": "ai_handler.py:235", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "81a57688"}
{"timestamp": "2025-09-16T16:25:59.358227+09:00", "level": "INFO", "name": "root", "message": "1단계: Lite 모델 호출 시작...", "source": "ai_handler.py:250", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "81a57688"}
{"timestamp": "2025-09-16T16:25:59.358340+09:00", "level": "INFO", "name": "root", "message": "Lite 모델 응답: '<tool_call>{\"tool_to_use\": \"get_travel_recommendation\", \"parameters\": {\"location_name\": \"Testville\"}...'", "source": "ai_handler.py:259", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "81a57688"}
{"timestamp": "2025-09-16T16:25:59.358590+09:00", "level": "INFO", "name": "root", "message": "분기: 도구 사용으로 판단. Tool: {'tool_to_use': 'get_travel_recommendation', 'parameters': {'location_name': 'Testville'}}", "source": "ai_handler.py:270", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "81a57688"}
{"timestamp": "2025-09-16T16:25:59.358653+09:00", "level": "INFO", "name": "root", "message": "2단계: Main 모델 호출 시작...", "source": "ai_handler.py:281", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "81a57688"}
{"timestamp": "2025-09-16T16:25:59.358695+09:00", "level": "INFO", "name": "root", "message": "여행 추천 도구 결과에 특수 프롬프트를 사용합니다.", "source": "ai_handler.py:291", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "81a57688"}
{"timestamp": "2025-09-16T16:25:59.358791+09:00", "level": "INFO", "name": "root", "message": "Main 모델이 최종 답변을 생성했습니다.", "source": "ai_handler.py:308", "function": "process_agent_message", "guild_id": 123, "user_id": 789, "channel_id": 456, "trace_id": "81a57688"}
